{
  "name": "timer-stopwatch",
  "version": "0.1.5",
  "description": "A stopwatch and countdown timer for node",
  "author": {
    "name": "Mick Crozier",
    "email": "mick@backstagesolutions.com.au"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/MickCrozier/timer-stopwatch"
  },
  "homepage": "https://github.com/MickCrozier/timer-stopwatch",
  "keywords": [
    "timer",
    "stopwatch",
    "clock",
    "countdown"
  ],
  "dependencies": {
    "lodash": "^2.4.1"
  },
  "devDependencies": {
    "expect.js": "^0.3.1",
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-mocha-test": "^0.11.0",
    "mocha": "^1.20.1"
  },
  "scripts": {
    "test": "grunt test"
  },
  "readme": "\ntimer-stopwatch [![Codeship Status for MickCrozier/timer-stopwatch](https://codeship.io/projects/d68910a0-e989-0131-eba0-368dc75eab9e/status)](https://codeship.io/projects/26196)\n========================\n\nA stopwatch and countdown clock module for node.js\n\n\nInstall\n======\n\n```shell\nnpm install timer-stopwatch\n```\n\n\nHow to\n======\n**The Gist**\nnew Stopwatch([countDownMS], [options])\n\n\nBasic timers\n```js\nvar Stopwatch = require('timer-stopwatch');\n\nvar timer = new Stopwatch(60000); // A new countdown timer with 60 seconds\nvar stopwatch = new Stopwatch(); // A new count up stopwatch. Starts at 0.\n```\n\n###Events\n```js\n// Fires every 50ms by default. Change setting the 'refreshRateMS' options\ntimer.on('time', function(time) {\n\tconsole.log(time.ms); // number of milliseconds past (or remaining);\n});\n\n// Fires when the timer is done\ntimer.on('done', function(){\n\tconsole.log('Timer is complete');\n});\n\n// Fires when the timer is almost complete - default is 10 seconds remaining. Change with 'almostDoneMS' option\ntimer.on('almostdone', function() {\n\tconsole.log('Timer is almost complete');\n});\n\n```\n\n###Methods\n```js\ntimer.start();\ntimer.stop();\ntimer.startstop();\ntimer.reset(countDownMS); // optional countDownMS to reset countdown to that many milliseconds\n```\n\n###Properties\n```js\ntimer.ms;\t\t// Number of milliseconds on the clock\n```\n\n\n\n###Options\n```js\nvar options = {\n\trefreshRateMS: 10,\t\t// How often the clock should be updated\n\talmostDoneMS: 10000, \t// When counting down - this event will fire with this many milliseconds remaining on the clock\n}\n\nvar timer = new Stopwatch(60000, options);\n```\n\n\n\nTesting\n======\n\nUnit and Integration tests (requires dev dependencies)\n```shell\nnpm test\n```\n\nLicense\n======\nMIT License\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/MickCrozier/timer-stopwatch/issues"
  },
  "_id": "timer-stopwatch@0.1.5",
  "_shasum": "6fd486be39bcae1475c7f7450bfd6dd9cb6ff06a",
  "_from": "timer-stopwatch@^0.1.5",
  "_resolved": "https://registry.npmjs.org/timer-stopwatch/-/timer-stopwatch-0.1.5.tgz"
}
